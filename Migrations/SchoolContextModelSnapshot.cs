// <auto-generated />
using System;
using GradeMaker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GradeMaker.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ClassroomStudent", b =>
                {
                    b.Property<int>("ClassroomsClassroomID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassroomsClassroomID", "StudentsID");

                    b.HasIndex("StudentsID");

                    b.ToTable("ClassroomStudent");
                });

            modelBuilder.Entity("GradeMaker.Models.Classroom", b =>
                {
                    b.Property<int>("ClassroomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassTeacherID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassroomID");

                    b.HasIndex("ClassTeacherID");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            ClassroomID = 1,
                            ClassName = "English",
                            ClassTeacherID = 1
                        });
                });

            modelBuilder.Entity("GradeMaker.Models.ClassroomTerm", b =>
                {
                    b.Property<int>("ClassroomTermID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassroomID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassroomTermName")
                        .HasColumnType("TEXT");

                    b.HasKey("ClassroomTermID");

                    b.HasIndex("ClassroomID");

                    b.ToTable("ClassroomTerms");

                    b.HasData(
                        new
                        {
                            ClassroomTermID = 1,
                            ClassroomID = 1,
                            ClassroomTermName = "Term 1"
                        },
                        new
                        {
                            ClassroomTermID = 2,
                            ClassroomID = 1,
                            ClassroomTermName = "Term 2"
                        },
                        new
                        {
                            ClassroomTermID = 3,
                            ClassroomID = 1,
                            ClassroomTermName = "Term 3"
                        });
                });

            modelBuilder.Entity("GradeMaker.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassroomTermID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnrollmentItemSubGradingSectionID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Grade")
                        .HasColumnType("REAL");

                    b.Property<int>("StudentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("EnrollmentItemSubGradingSectionID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("GradeMaker.Models.GradingSection", b =>
                {
                    b.Property<int>("GradingSectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassroomTermID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<double>("Weighting")
                        .HasColumnType("REAL");

                    b.HasKey("GradingSectionID");

                    b.HasIndex("ClassroomTermID");

                    b.ToTable("GradingSections");
                });

            modelBuilder.Entity("GradeMaker.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Thoai"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Khang"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Peter"
                        });
                });

            modelBuilder.Entity("GradeMaker.Models.StudentClassroom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassroomID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClassroomID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentClassroom");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            ClassroomID = 1,
                            StudentID = 1
                        },
                        new
                        {
                            ID = -2,
                            ClassroomID = 1,
                            StudentID = 2
                        },
                        new
                        {
                            ID = -3,
                            ClassroomID = 1,
                            StudentID = 3
                        });
                });

            modelBuilder.Entity("GradeMaker.Models.SubGradingSection", b =>
                {
                    b.Property<int>("SubGradingSectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GradingSectionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.HasKey("SubGradingSectionID");

                    b.HasIndex("GradingSectionID");

                    b.ToTable("SubGradingSections");
                });

            modelBuilder.Entity("GradeMaker.Models.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "John",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("ClassroomStudent", b =>
                {
                    b.HasOne("GradeMaker.Models.Classroom", null)
                        .WithMany()
                        .HasForeignKey("ClassroomsClassroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradeMaker.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GradeMaker.Models.Classroom", b =>
                {
                    b.HasOne("GradeMaker.Models.Teacher", "ClassTeacher")
                        .WithMany()
                        .HasForeignKey("ClassTeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTeacher");
                });

            modelBuilder.Entity("GradeMaker.Models.ClassroomTerm", b =>
                {
                    b.HasOne("GradeMaker.Models.Classroom", "Classroom")
                        .WithMany("ClassroomTerms")
                        .HasForeignKey("ClassroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("GradeMaker.Models.Enrollment", b =>
                {
                    b.HasOne("GradeMaker.Models.SubGradingSection", "EnrollmentItem")
                        .WithMany()
                        .HasForeignKey("EnrollmentItemSubGradingSectionID");

                    b.HasOne("GradeMaker.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrollmentItem");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("GradeMaker.Models.GradingSection", b =>
                {
                    b.HasOne("GradeMaker.Models.ClassroomTerm", "ClassroomTerm")
                        .WithMany("GradingSections")
                        .HasForeignKey("ClassroomTermID");

                    b.Navigation("ClassroomTerm");
                });

            modelBuilder.Entity("GradeMaker.Models.StudentClassroom", b =>
                {
                    b.HasOne("GradeMaker.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradeMaker.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("GradeMaker.Models.SubGradingSection", b =>
                {
                    b.HasOne("GradeMaker.Models.GradingSection", "GradingSection")
                        .WithMany("SubGradingSections")
                        .HasForeignKey("GradingSectionID");

                    b.Navigation("GradingSection");
                });

            modelBuilder.Entity("GradeMaker.Models.Classroom", b =>
                {
                    b.Navigation("ClassroomTerms");
                });

            modelBuilder.Entity("GradeMaker.Models.ClassroomTerm", b =>
                {
                    b.Navigation("GradingSections");
                });

            modelBuilder.Entity("GradeMaker.Models.GradingSection", b =>
                {
                    b.Navigation("SubGradingSections");
                });

            modelBuilder.Entity("GradeMaker.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
